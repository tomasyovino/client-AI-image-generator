import React, { useState, useEffect } from 'react';
import { Loader, FormField, Pagination } from "../components";
import { motion } from "framer-motion";

const Home = () => {
    const [loading, setLoading] = useState(false);
    const [allPost, setAllPost] = useState(null);
    const [searchText, setSearchText] = useState('');
    const [ searchedResults, setSearchedResults] = useState(null);
    const [ searchTimeout, setSearchTimeout] = useState(null);

    useEffect(() => {
        const fetchPosts = async () => {
            setLoading(true);
            try {
                const response = await fetch (`${import.meta.env.VITE_BASE_URL}/api/posts`, {
                    method: "GET",
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if(response.ok) {
                    const result = await response.json();
                    setAllPost(result.data.reverse());
                };
                
            } catch (err) {
                console.log(err);
                alert(err);
            } finally {
                setLoading(false);
            };
        };

        fetchPosts();
    }, []);

    const handleSearchChange = (e) => {
        clearTimeout(searchTimeout);

        setSearchText(e.target.value);

        setSearchTimeout(
            setTimeout(() => {
                const searchResults = allPost.filter((post) => post.name.toLowerCase().includes(searchText.toLowerCase()) || post.prompt.toLowerCase().includes(searchText.toLowerCase()));

                setSearchedResults(searchResults);
            }, 500)
        );
    };

    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
                <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>Browse through a collection of imaginative and visually stunning images generated by AI Image Generator</p>
            </div>

            <div className='mt-16 '>
                <FormField 
                    labelName="Search posts"
                    type="text"
                    name="text"
                    placeholder="Search posts"
                    value={searchText}
                    handleChange={handleSearchChange}
                />
            </div>

            <div className='mt-10 '>
                { loading ? (
                    <div className='flex justify-center items-center'>
                        <Loader />
                    </div>
                ) : (
                    <>
                        { searchText && (
                            <h2 className='font-medium text-[#666e75] text-xl mb-3'>Showing results for <span className='text-[#222328]'>{searchText}</span></h2>
                        ) }
                        <div>
                            { searchText ? (
                                <Pagination 
                                    posts={searchedResults}
                                    title="No search results found"
                                    itemsPerPage={10}
                                />
                            ) : (
                                <Pagination 
                                    posts={allPost}
                                    title="No posts found"
                                    itemsPerPage={10}
                                />
                            ) }
                        </div>
                    </>
                ) }
            </div>
        </section>
    )
}

export default Home